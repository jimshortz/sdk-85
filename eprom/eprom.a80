;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; EPROM programming routines for SDK-85 8751A interface
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	PUBLIC	EPINIT,EPREAD,EPPROG
	CSEG
	
;;; I/O Ports
CMD	EQU	20H		; Command register for port A,B
PORTA	EQU	21H		; SDK-85 port A (connected to AD0-AD7)
PORTB	EQU	22H		; SDK-85 port B

;;; CMD Mask bits
OUTA	EQU	1		; Port A output mode
OUTB	EQU	2		; Port B output mode

;;; PORTB address bits
ALE	EQU	00010000B
RD	EQU	00100000B	; /RD (active low)
PROG	EQU	01000000B
VDD	EQU	10000000B

;;; ROM entry points
DELAY	EQU	05F1H

;;; Macro to delay 2 microseconds
DLY2US	MACRO
	NOP			; Burn 6 T-states
	NOP
	ENDM

;;; Macro to delay 50 milliseconds
DLY50MS	MACRO
	PUSH	D
	LXI	D,6365
	CALL	DELAY
	POP	D
	ENDM


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Sets up I/O ports for 8755 programming
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
EPINIT:	MVI	A,OUTA OR OUTB	; Set DDRs
	OUT	CMD
	MVI	A,0		; Clear address and ctrl bits
	OUT	PORTA
	MVI	A,RD		; Deassert /RD
	OUT	PORTB
	RET
	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Load address from BC into 8755
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
LDADR:	MOV	A,B		; Write A8-11 to PORTB
	ANI	111B
	ORI	RD		; Deassert /RD
	OUT	PORTB
	MOV	A,C		; Write A0-A7 to PORTA
	OUT	PORTA
	IN	PORTB		; Strobe ALE
	ORI	ALE
	OUT	PORTB
	ANI	NOT ALE
	OUT	PORTB
	RET
	
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Write E value into EPROM at address BC
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
EPPROG:	CALL	LDADR
	MOV	A,E
	OUT	PORTA		; Write byte to data lines
	IN	PORTB
	ORI	PROG
	OUT	PORTB
	DLY2US			; 2us delay
	ORI	VDD
	OUT	PORTB
	DLY50MS			; 50ms delay
	IN	PORTB
	ANI	NOT VDD
	OUT	PORTB
	DLY2US			; 2us delay
	ANI	NOT PROG
	OUT	PORTB
	RET

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Read byte from EPROM at address BC into A
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
EPREAD:	CALL	LDADR
	MVI	A,OUTB		; Switch PORTA to input
	OUT	CMD
	IN	PORTB		; Assert /RD
	ANI	NOT RD
	OUT	PORTB
	IN	PORTA		; Read value
	PUSH	PSW
	IN	PORTB		; Deassert /RD
	ORI	RD
	OUT	PORTB
	MVI	A,OUTA OR OUTB
	ORI	OUTA		; PORTA back to output
	OUT	CMD
	POP	PSW
	RET

	END
	
